1. Stack چیست؟
Stack (پشته) بخشی از حافظه‌ی RAM هست که برای نگهداری داده‌های موقت استفاده می‌شه؛ مثل:

متغیرهای محلی (مثل char name[8])

آدرس برگشت از تابع (Return Address)

اطلاعات اجرای توابع (Stack Frame)

🔄 رفتار پشته (LIFO)
Stack رفتار Last-In, First-Out داره:

هر بار که تابعی فراخوانی می‌شه، یه Stack Frame جدید براش ساخته می‌شه.

وقتی تابع تموم می‌شه، اون فریم پاک می‌شه.

📦 2. Stack Frame چیست؟
زمانی که تابعی مثل main() یا هر تابع دیگه‌ای اجرا می‌شه، فریم مخصوص خودش رو داره. این فریم شامل:

متغیرهای محلی

آدرس برگشت (که باید برنامه بعد از پایان تابع به اون برگرده)

اطلاعات مربوط به پارامترهای تابع (اگر وجود داشته باشه)

🧮 3. نقش رجیسترها (مقدمه کوتاه)
تو پردازنده x86 (و x86_64)، چند رجیستر مهم هستن که مستقیماً با پشته درگیرن:

رجیستر	کاربرد
EBP / RBP	Base Pointer: آدرس ابتدای Stack Frame فعلی
ESP / RSP	Stack Pointer: آدرس بالاترین مکان آزاد روی Stack
EIP / RIP	Instruction Pointer: آدرس دستور بعدی برای اجرا

